<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.baojuxinxi.dao.UserRolesMapper" >
  <resultMap id="BaseResultMap" type="net.baojuxinxi.pojo.UserRoles" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap type="net.baojuxinxi.pojo.UserRoles" id="u_r_Result" extends="BaseResultMap">
  <collection property="roles" javaType="net.baojuxinxi.pojo.Roles">
  	<id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="role_key" property="roleKey" jdbcType="VARCHAR" />
    <result column="role_level" property="roleLevel" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="latest_update_time" property="latestUpdateTime" jdbcType="TIMESTAMP" />
  </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_roles
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectUserRole" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_roles
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_roles
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="net.baojuxinxi.pojo.UserRoles" >
    insert into user_roles (id, user_id, role_id
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.baojuxinxi.pojo.UserRoles" >
    insert into user_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.baojuxinxi.pojo.UserRoles" >
    update user_roles
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.baojuxinxi.pojo.UserRoles" >
    update user_roles
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 获取角色 -->
  <sql id="Base_List" >
    u.id, u.user_id, u.role_id
  </sql>
  <sql id="role_List" >
    r.role_id,r.role_name, r.parent_id, r.role_key, r.role_level, r.description, r.created_time, r.latest_update_time
  </sql>
   <select id="get_roles" resultMap="u_r_Result" parameterType="java.lang.String" >
    select 
    <include refid="Base_List" />,<include refid="role_List" />
    from user_roles u INNER JOIN roles r ON u.role_id=r.role_id
    where u.user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <!-- 根据用户id修改角色 -->
    <update id="updateByPrimaryUserId" parameterType="net.baojuxinxi.pojo.UserRoles" >
    update user_roles
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>